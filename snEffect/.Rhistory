{
if (!is.integer(readlength))
readlength <- as.integer(readlength)
start <- sample(length(subject) - readlength + 1L, nread,
replace=TRUE)
DNAStringSet(subject, start=start, width=readlength)
}
ref
variant_minus<-getSeq(genome, del$chr,
start=del$start, end=del$end, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, del$chr,
start=del$start, end=del$end, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
class(variant_minus)
variant_minus<-as.data.frame(variant)
variant_minus<-getSeq(genome, del$chr,
start=del$start, end=del$end, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, del$chr,
start=del$start, end=del$end, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
mut.gr
getSeq(txdb, mu.gr)  # treats strand values as if they were "+"
getSeq(TxDb.Hsapiens.UCSC.hg19.knownGene, mu.gr)  # treats strand values as if they were "+"
getSeq(genome, mu.gr)  # treats strand values as if they were "+"
getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
variant_minus
variant_plus
variant_minus_df
variant_plus_df
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
variant_minus<-getSeq(genome, del$chr,
start=del$start, end=del$start, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, del$chr,
start=del$start, end=del$start, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
uma$Position
del$start
variant_minus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
mut.gr
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
del
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
strand(gr1)[] <- "-"
getSeq(genome, gr1)
genome
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
getSeq(genome, mut.gr)
strand(gr1)[1] <- "+"
getSeq(Celegans, mut.gr)
getSeq(genome, mut.gr)
getSeq(genome, mut.gr)  # Error: cannot mix "*" with other strand values
strand(gr1)[2] <- "*"
strand(gr1)[1] <- "+"
strand(gr1)[] <- "-"
getSeq(genome, mut.gr)
strand(gr1)[1] <- "+"
getSeq(genome, mut.gr)
strand(gr1)[2] <- "*"
if (interactive())
getSeq(genome, mut.gr)  # Error: cannot mix "*" with other strand values
gr1 <- GRanges(seqnames=c("chrI", "chrII", "chrM", "chrII"),
ranges=IRanges(start=101:104, width=12),
strand="+")
gr2 <- shift(gr1, 5)
gr3 <- gr2
strand(gr3) <- "-"
grl <- GRangesList(gr1, gr2, gr3)
getSeq(Celegans, grl)
gr1
gr2
gr3
extractRandomReads <- function(x, density, readlength)
{
if (!is.integer(readlength))
readlength <- as.integer(readlength)
start <- lapply(seqnames(x),
function(name)
{
seqlength <- seqlengths(x)[name]
sample(seqlength - readlength + 1L,
seqlength * density,
replace=TRUE)
})
names <- rep.int(seqnames(x), elementNROWS(start))
ranges <- IRanges(start=unlist(start), width=readlength)
strand <- strand(sample(c("+", "-"), length(names), replace=TRUE))
gr <- GRanges(seqnames=names, ranges=ranges, strand=strand)
getSeq(x, gr)
}
## With a density of 1 read every 100 genome bases, the total number of
## extracted 40-mers is about 1 million:
rndreads <- extractRandomReads(genome, 0.01, 40)
del
positions<-paste(del$chr,":",del$start,"-",del$end, sep = "")
positions
mut.gr
## ---------------------------------------------------------------------
## C. USING A GRanges OBJECT
## ---------------------------------------------------------------------
variant
BSgenome.Hsapiens.UCSC.hg19
genome <- BSgenome.Hsapiens.UCSC.hg19
head(seqlengths(genome))
genome$chr1 # same as genome[["chr1"]]
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
uma$Position
del$start
## Load the Caenorhabditis elegans genome (UCSC Release ce2):
library(BSgenome.Hsapiens.UCSC.hg19)
## Look at the index of sequences:
genome<-BSgenome.Hsapiens.UCSC.hg19
## Get chromosome V as a DNAString object:
getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr22")
variant_minus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
## ---------------------------------------------------------------------
## C. USING A GRanges OBJECT
## ---------------------------------------------------------------------
variant
mut.gr
mut.gr #how did I make mut.gr again?
genome
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gf1
gr1
## ---------------------------------------------------------------------
## C. USING A GRanges OBJECT
## ---------------------------------------------------------------------
variant
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
positions
uma$Position
tmp
strand(gr1)[] <- "-"
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
position[2]
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
positions[2]
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
positions
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
positions<-paste(uma$Chrom,":",uma$Position)
positions
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
positions<-paste(uma$Chrom,":",uma$Position, sep="")
positions
positions2<-
tmp
positions2
positions2cbind(positions,tmp)
positions2<-cbind(positions,tmp)
positions2
colnames(positions2)<-c("positions","minus",'plus',"mut.gr")
positions2
positions2$minus==positions2$mut.gr
positions2$mut.gr<-NULL
strand(gr1)[2] <- "*"
if (interactive())
getSeq(genome, mut.gr)  # Error: cannot mix "*" with other strand values
positions
write.table(positions,"positions.txt",sep = "\t")
write.table(positions,"positions.txt",row.names = NA,sep = "\t")
write.table(positions,"positions.txt",row.names = F,sep = "\t")
write.table(positions,"positions.txt",row.names = F,quote = F,sep = "\t")
write.table(positions,"positions.txt",row.names = F,col.names = F,quote = F,sep = "\t")
library(GenomicRanges)
mut.gr <- with(uma, GRanges(Chrom, IRanges(Position, Position)))
mut.gr
data("hg19Ideogram", package = "biovizBase")
seqs <- seqlengths(hg19Ideogram)
seqlevels(hg19Ideogram)
## subset_chr
chr.sub <- c(paste("chr", 1:22,sep=""),"chrUn_gl000238","chrX")
# chr.sub<-c(1:22,"chrUn_gl000238","chrX")
class(chr.sub)
seqlevels(mut.gr,pruning.mode=c("coarse"))<- chr.sub
seqlevels(mut.gr)
mut.gr <- keepSeqlevels(mut.gr, chr.sub)
mut.gr
seqs.sub <- seqs[chr.sub]
## assign_seqlengths
seqlengths(mut.gr) <- seqs.sub
## reanme to shorter names
new.names <- as.character(1:22)
names(new.names) <- paste("chr", new.names, sep = "")
new.names
mut.gr.new <- renameSeqlevels(mut.gr, new.names)
head(mut.gr.new)
#To get ideogram track, we need to load human hg19 ideogram data, for details please check another vignette about getting ideogram.
hg19Ideo <- hg19Ideogram
seqlevels(hg19Ideo)
hg19Ideo <- keepSeqlevels(hg19Ideo, chr.sub, pruning.mode = "coarse")
hg19Ideo <- renameSeqlevels(hg19Ideo, new.names)
head(hg19Ideo)
library(ggbio)
#basic circle
p <- ggplot() + #layout_circle(hg19Ideo, geom = "ideo", fill = "gray70", rank=1)+#radius = 6,trackWidth = 1
layout_circle(hg19Ideo, geom = "scale", size = 3, rank=2)+# radius = 7, trackWidth = 2) +
layout_circle(hg19Ideo, geom = "text", aes(label = seqnames),size = 5,hjust=-0.01, vjust = 0,rank=3)+#radius = 11, trackWidth = 1) +
layout_circle(mut.gr, geom = "rect",stack=T, color = "firebrick4", size=1.5,rank=1, grid=T, grid.line="white", grid.background="grey80")#radius = 5,trackWidth = 1)
p
#########################################################
# NOTE: There is a duplication in the uma example at chromosome 2
chr2<-uma%>%filter(Chrom=="chr2")
#########################################################
# NOTE: There is a duplication in the uma example at chromosome 2
library(dplyr)
chr2<-uma%>%filter(Chrom=="chr2")
chr2[13:14,1:16]
BSgenome.Hsapiens.UCSC.hg19
library(BSgenome.Hsapiens.UCSC.hg19)
genome <- BSgenome.Hsapiens.UCSC.hg19
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
uma$Position
del$start
## Load the Caenorhabditis elegans genome (UCSC Release ce2):
library(BSgenome.Hsapiens.UCSC.hg19)
## Look at the index of sequences:
genome<-BSgenome.Hsapiens.UCSC.hg19
variant_minus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="-")
variant_minus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="-")
variant_minus_df<-as.data.frame(variant_minus)
variant_plus<-getSeq(genome, uma$Chrom,
start=uma$Position, end=uma$Position, strand="+")
variant_plus_df<-as.data.frame(variant_plus)
mut.gr #how did I make mut.gr again?
gr1<-getSeq(genome, mut.gr)  # treats strand values as if they were "+"
gr1
gr1_df<-as.data.frame(gr1)
tmp<-cbind(gr1_df,variant_minus_df,variant_plus_df)
tmp
#The variant_minus_df is wrong, the variant plus df and the mut.gr are correct
positions<-paste(uma$Chrom,":",uma$Position, sep="")
positions
positions2<-cbind(positions,tmp)
colnames(positions2)<-c("positions","minus",'plus',"mut.gr")
positions2
positions2$mut.gr<-NULL
positions2
write.table(positions,"positions.txt",row.names = F,col.names = F,quote = F,sep = "\t")
write.table(positions2,"positions.txt",row.names = F,col.names = T,quote = F,sep = "\t")
uma
#load our library
library(dplyr)
library(BSgenome.Hsapiens.UCSC.hg19)
library(BSgenome)
BSgenome.Hsapiens.UCSC.hg19
genome <- BSgenome.Hsapiens.UCSC.hg19
head(seqlengths(genome))
genome$chr1 # same as genome[["chr1"]]
length(BSgenome.Hsapiens.UCSC.hg19)
BSgenome.Hsapiens.UCSC.hg19
length(BSgenome.Hsapiens.UCSC.hg19)
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
del<-uma%>%select(Chrom,Position)
del$Position<-del$Position
del
#run the getSeq function to acquire the variant call
# and place into a s4 object called variant
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$Position)
variant
#convert the s4 object to a dataframe
variant<-data.frame(variant)
#overwrite the existing column in the uma df with the variant call
uma$Variant<-variant$variant
library(tidyverse)
library(dplyr)
uma
# Unite the columns ref and variant
Ref<-unite(data = uma,col = "Ref",Variant:Ref, sep = "")
#overwrite the existing ref column in uma with the united column
uma$Ref<-Ref$Ref
uma
positions2
#load our library
library(dplyr)
library(BSgenome.Hsapiens.UCSC.hg19)
library(BSgenome)
BSgenome.Hsapiens.UCSC.hg19
genome <- BSgenome.Hsapiens.UCSC.hg19
head(seqlengths(genome))
genome$chr1 # same as genome[["chr1"]]
length(BSgenome.Hsapiens.UCSC.hg19)
BSgenome.Hsapiens.UCSC.hg19
length(BSgenome.Hsapiens.UCSC.hg19)
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
#change this to wherever you saved the github from
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
del<-uma%>%select(Chrom,Position)
del$Position<-del$Position
del
#run the getSeq function to acquire the variant call
# and place into a s4 object called variant
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$Position)
variant
#convert the s4 object to a dataframe
variant<-data.frame(variant)
#overwrite the existing column in the uma df with the variant call
uma$Variant<-variant$variant
library(tidyverse)
uma
##################################################################
#If you dont want a duplicate, simply comment out this line of code
# Unite the columns ref and variant
Ref<-unite(data = uma,col = "Ref",Variant:Ref, sep = "")
#overwrite the existing ref column in uma with the united column
uma$Ref<-Ref$Ref
#export this as a tsv file
write.table(uma,"uma_variant_called.tsv",sep = "\t")
uma$Ref
#load our library
library(dplyr)
library(BSgenome.Hsapiens.UCSC.hg19)
library(BSgenome)
#change this to wherever you saved the github from
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
del<-uma%>%select(Chrom,Position)
del$Position<-del$Position
del
#run the getSeq function to acquire the variant call
# and place into a s4 object called variant
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$Position)
variant
#convert the s4 object to a dataframe
variant<-data.frame(variant)
#overwrite the existing column in the uma df with the variant call
uma$Variant<-variant$variant
library(tidyverse)
library(dplyr)
uma
#change this to wherever you saved the github from
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
del<-uma%>%select(Chrom,Position)
del$Position<-del$Position-1
del
#run the getSeq function to acquire the variant call
# and place into a s4 object called variant
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$Position)
variant
#convert the s4 object to a dataframe
variant<-data.frame(variant)
#overwrite the existing column in the uma df with the variant call
uma$Variant<-variant$variant
library(tidyverse)
library(dplyr)
uma
##################################################################
#If you dont want a duplicate, simply comment out this line of code
# Unite the columns ref and variant
Ref<-unite(data = uma,col = "Ref",Variant:Ref, sep = "")
#overwrite the existing ref column in uma with the united column
uma$Ref<-Ref$Ref
#export this as a tsv file
write.table(uma,"uma_variant_called.tsv",row.names = F,sep = "\t")
################This section of code with add the previous basepair to the Ref column######
uma$Ref
################This section of code with add the previous basepair to the Ref column######
length(uma$Ref)
################This section of code with add the previous basepair to the Ref column######
uma$reflength<-length(uma$Ref)
uma$reflength
width(uma$Ref)
################This section of code with add the previous basepair to the Ref column######
uma$reflength<-width(uma$Ref)
uma$reflength
del$reflength<-width(uma$Ref)
del$delref<-del$Position-del$reflength
del$delref
variantdelref<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$delref)
variantdelref<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$delref,
end=del$Position)
variantdelref
variantdelref<-data.frame(variantdelref)
#overwrite the existing column in the uma df with the variant call
uma$Ref2<-variantdelref$variantdelref
uma$Variant<-variant$variant
uma
cbind(uma$Ref,uma$Ref2)
#change this to wherever you saved the github from
setwd(dir = "d:/github/Rani_Perasani/snEffect/Rani_Perasani/")
#import the report
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
head(uma)
del<-uma%>%select(Chrom,Position)
del$VarPosition<-del$Position-1
del$reflength<-width(uma$Ref)
del$delref<-del$Position-del$reflength
#run the getSeq function to acquire the variant call
# and place into a s4 object called variant
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$VarPosition,
end=del$VarPosition)
variantdelref<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$delref,
end=del$Position)
#convert the s4 object to a dataframe
variant<-data.frame(variant)
variantdelref<-data.frame(variantdelref)
#overwrite the existing column in the uma df with the variant call
uma$Ref2<-variantdelref$variantdelref
uma$Variant<-variant$variant
library(tidyverse)
library(dplyr)
cbind(uma$Ref,uma$Ref2)
setwd("D:/github/microbial/Rdata/GO_term_analysis/GO_TERM_maaslin2_analysis_2_DEC_2020")
library(BSgenome.Hsapiens.UCSC.hg19)
getwd()
getwd()
#setwd("/Users/umaraniperasani/desktop")
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
uma$chr<-uma$Chrom
getwd()
setwd("D:/github/Rani_Perasani/snEffect/Rani_Perasani/")
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
uma<-read.table(file = "uma_example.txt",header = T,sep="\t")
uma$chr<-uma$Chrom
uma$start<-uma$Position -1
uma$end<-uma$Position-1
library(dplyr)
del<-uma%>%select(Chrom,Position)
del$Position<-del$Position-1
del
variant<-getSeq(x=BSgenome.Hsapiens.UCSC.hg19,
names=del$Chrom,
start=del$Position,
end=del$Position)
variant<-data.frame(variant)
variant
uma$Variant<-variant$variant
uma$Variant
Ref<-unite(data = uma,col = "Ref",Variant:Ref, sep = "")
library(tidyverse)
Ref<-unite(data = uma,col = "Ref",Variant:Ref, sep = "")
uma$Ref<-Ref$Ref
uma$Ref
write.table(uma,"uma_variant_annotated.tsv",sep = "\t")
########################################################
# Download using wget
wget https://snpeff.blob.core.windows.net/versions/snpEff_latest_core.zip
remotes::install_github("AndersenLab/cegwas")
write.table(uma,"uma_variant_annotated.tsv",quote = F,row.names = F,sep = "\t")
write.table(uma,"uma_variant_annotated.tsv",quote = F,row.names = F,sep = "\t")
